{"version":3,"sources":["App.js","index.js"],"names":["Filter","_ref","newFilter","handleFilterChange","react_default","a","createElement","value","onChange","Weather","_ref2","capital","weather","temp","src","iconUrl","alt","wind","windDir","Countries","_ref3","countries","setNewFilter","setCapital","setWeather","filtered","filter","country","name","toLowerCase","match","length","languages","map","language","thisCapital","console","log","query","axios","get","then","response","data","current","temp_c","wind_kph","wind_dir","condition","icon","newWeather","population","key","flag","width","App_Weather","onClick","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setCountries","_useState5","_useState6","_useState7","_useState8","useEffect","App_Filter","event","target","App_Countries","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d850166e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\nconst Filter = ( { newFilter, handleFilterChange } ) => {\n  return (\n    <form> find countries\n        <input\n          value={newFilter}\n          onChange={handleFilterChange}\n       />\n    </form>\n  )\n}\n\nconst Weather = ({ capital, weather }) => {\n \n  return (\n    <div>\n      <h3>Weather in {capital}</h3>\n      <p><b>Temperature:</b> {weather.temp}  Celcius</p>\n      <img src={weather.iconUrl} alt=\"sunny pic\" />\n      <p>\n        <b>wind:</b> {weather.wind} kph\n        direction {weather.windDir}\n      </p>\n    </div>\n  )\n}\n\nconst Countries = ({countries, newFilter, setNewFilter,capital, setCapital, weather, setWeather}) => {\n\n  const showCountry = (name) => {\n    setNewFilter(name)\n  }\n\n  const filtered = countries.filter(country => country.name.toLowerCase().match(newFilter.toLowerCase()))\n\n  if (filtered.length === 1) {\n    let country = filtered[0]\n    let languages = country.languages.map(language => language.name)\n\n    const showLanguages = () => {\n      return languages.map(language =>\n        <li key={language}>\n          {language}\n        </li>\n      )\n    }\n    let thisCapital = country.capital\n    console.log('THIS CAPITAL: ',thisCapital)\n    console.log('CAPITAL: ',capital)\n    setCapital(thisCapital)\n\n      console.log('capital: ', country.capital)\n      let query = 'https://api.apixu.com/v1/current.json?key=748bf165d4f247fa843162921190204&q=' + capital\n      console.log('effect weather')\n      console.log(query)\n      axios\n        .get(query)\n        .then(response => {\n          console.log('weather - promise fulfilled')\n          let temp = response.data.current.temp_c\n          let wind = response.data.current.wind_kph\n          let windDir = response.data.current.wind_dir\n          let iconUrl = response.data.current.condition.icon\n          console.log('s채채: ', temp, wind, windDir)\n          let newWeather = { temp, wind, windDir, iconUrl }\n          setWeather(newWeather)\n          console.log(newWeather)\n        })\n \n    return (\n      <div>\n        <h1>{country.name}</h1>\n        <p>capital {country.capital}</p>\n        <p>population {country.population}</p>\n        <h3>languages</h3>\n        <ul>\n          {showLanguages()}\n        </ul>\n        <img src={country.flag} width=\"120\" alt={country.name} />\n        <Weather capital={capital} weather={weather} />\n      </div>\n    )\n\n  } else if (filtered.length > 10) {\n    return (\n      <p>Too many matches, specify another filter</p>\n    )\n  } else {\n    return filtered.map(country =>\n      <div key={country.name}>\n        {country.name}\n        <button onClick={() => showCountry(country.name)}>show</button>\n      </div>\n    )\n  }\n}\n\nconst App = () => {\n\n  const [newFilter, setNewFilter] = useState('')\n  const [countries, setCountries] = useState([])\n  const [weather, setWeather] = useState({})\n  const [capital, setCapital] = useState('Paris')\n\n  useEffect(() => {\n    console.log('effect countries')\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        console.log('country - promise fulfilled')\n        setCountries(response.data)\n      })\n  }, [])\n  console.log('render', countries.length, 'countries')\n\n  /* useEffect(() => {\n    console.log('capital: ',capital)\n    let query = 'https://api.apixu.com/v1/current.json?key=748bf165d4f247fa843162921190204&q=' + capital\n    console.log('effect weather')\n    console.log(query)\n    axios\n      .get(query)\n      .then(response => {\n        console.log('weather - promise fulfilled')\n        let temp = response.data.current.temp_c\n        let wind = response.data.current.wind_kph\n        let windDir = response.data.current.wind_dir\n        let iconUrl = response.data.current.condition.icon\n        console.log('s채채: ', temp, wind, windDir)\n        let newWeather = { temp, wind, windDir, iconUrl }\n        setWeather(newWeather)\n        console.log(newWeather)\n      })\n  }, []) */\n\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n \n  return (\n    <div>\n      <Filter\n        newFilter={newFilter}\n        handleFilterChange={handleFilterChange}\n      />\n      <Countries\n        countries={countries}\n        newFilter={newFilter}\n        setNewFilter={setNewFilter}\n        capital={capital}\n        setCapital={setCapital}\n        weather={weather}\n        setWeather={setWeather}\n      />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n \n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}